{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryand\\\\Documents\\\\Lambda\\\\unit2\\\\week3\\\\day3\\\\advancedforms\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUser = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  tos: false\n};\nconst schema = yup.object().shape({\n  name: yup.string().required('user is required').max(7, 'username can only be 7 chars'),\n  email: yup.string().required('email is required'),\n  password: yup.string().required('password is required').min(8, 'password must be 8 chars.'),\n  tos: yup.boolean().oneOf([true], 'Please agree to the terms of service.')\n});\nexport default function Form(props) {\n  _s();\n\n  const [userValue, setUserValue] = useState(initialUser);\n  const [errors, setErrors] = useState(initialUser);\n  const [disabled, setDisabled] = useState(true);\n\n  const setFormErrors = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => setErrors({ ...errors,\n      [name]: ''\n    })).catch(err => setErrors({ ...errors,\n      [name]: err.errors[0]\n    }));\n  };\n\n  const changeHandler = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const valueToUse = type === 'checkbox' ? checked : value;\n    setFormErrors(name, valueToUse);\n    setUserValue({ ...userValue,\n      [name]: valueToUse\n    });\n  };\n\n  useEffect(() => {\n    schema.isValid(userValue).then(valid => setDisabled(!valid));\n  }, [userValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.tos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name Here\",\n          value: userValue.name,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email Here\",\n          value: userValue.email,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password Here\",\n          value: userValue.password,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Agree to Terms of Service:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"tos\",\n          type: \"checkbox\",\n          value: userValue.tos,\n          checked: userValue.tos,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: disabled,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Form, \"lHZeBgHi3scjWG/rsGPlIO5GixA=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/ryand/Documents/Lambda/unit2/week3/day3/advancedforms/src/Form.js"],"names":["React","useState","useEffect","yup","initialUser","name","email","password","tos","schema","object","shape","string","required","max","min","boolean","oneOf","Form","props","userValue","setUserValue","errors","setErrors","disabled","setDisabled","setFormErrors","value","reach","validate","then","catch","err","changeHandler","e","type","checked","target","valueToUse","isValid","valid","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as yup from 'yup';\r\n\r\nconst initialUser = {\r\n    name:\"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    tos: false\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('user is required').max(7, 'username can only be 7 chars'),\r\n    email: yup.string().required('email is required'),\r\n    password: yup.string().required('password is required').min(8, 'password must be 8 chars.'),\r\n    tos: yup.boolean().oneOf([true], 'Please agree to the terms of service.'),\r\n})\r\n\r\nexport default function Form(props){\r\n\r\n    const [userValue, setUserValue] = useState(initialUser);\r\n    const [errors, setErrors] = useState(initialUser);\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    const setFormErrors = (name, value) => {\r\n        yup.reach(schema, name).validate(value)\r\n        .then(() => setErrors({...errors, [name]: '' }))\r\n        .catch(err => setErrors({...errors, [name]: err.errors[0] }))\r\n    };\r\n\r\n    const changeHandler = (e) => {\r\n        const {name, value, type, checked} = e.target\r\n        const valueToUse = type === 'checkbox' ? checked : value\r\n        setFormErrors(name, valueToUse)\r\n        setUserValue({...userValue, [name]: valueToUse})\r\n    };\r\n\r\n    useEffect(() => {\r\n    \r\n        schema.isValid(userValue).then(valid => setDisabled(!valid))\r\n    \r\n    }, [userValue]);\r\n\r\nreturn(\r\n<div>\r\n    <div style={{color : 'red' }}>\r\n        <div>{errors.name}</div>\r\n        <div>{errors.email}</div>\r\n        <div>{errors.password}</div>\r\n        <div>{errors.tos}</div>\r\n    </div>\r\n    <form>\r\n        <label>\r\n        Name:    \r\n            <input\r\n             name=\"name\"\r\n             type=\"text\"\r\n             placeholder=\"Name Here\"\r\n             value={userValue.name}\r\n             onChange={changeHandler}\r\n            />\r\n        </label>\r\n        <label>\r\n        Email:        \r\n            <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email Here\"\r\n            value={userValue.email}\r\n            onChange={changeHandler}  \r\n            />  \r\n        </label>\r\n        <label>\r\n        Password:\r\n            <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password Here\"\r\n            value={userValue.password}\r\n            onChange={changeHandler}  \r\n            />\r\n        </label>\r\n        <label>\r\n            Agree to Terms of Service:\r\n            <input\r\n            name=\"tos\"\r\n            type=\"checkbox\"\r\n            value={userValue.tos}\r\n            checked={userValue.tos}\r\n            onChange={changeHandler}  \r\n            />\r\n        </label>\r\n     <button disabled={disabled}>Submit</button>\r\n    </form>\r\n</div>\r\n)\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}